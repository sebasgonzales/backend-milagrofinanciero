// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend_milagrofinanciero.Data;

#nullable disable

namespace backend_milagrofinanciero.Migrations
{
    [DbContext(typeof(MilagrofinancieroG1Context))]
    partial class MilagrofinancieroG1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("Banco_pkey");

                    b.ToTable("Banco", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Alta")
                        .HasColumnType("date")
                        .HasColumnName("alta");

                    b.Property<string>("Calle")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("calle");

                    b.Property<string>("CuitCuil")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cuit_cuil");

                    b.Property<string>("Departamento")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("departamento");

                    b.Property<int>("LocalidadId")
                        .HasColumnType("integer")
                        .HasColumnName("Localidad_ID");

                    b.Property<string>("Numero")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("numero");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("razon_social");

                    b.HasKey("Id")
                        .HasName("Cliente_pkey");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.ClienteXCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Alta")
                        .HasColumnType("date")
                        .HasColumnName("alta");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("Cliente_ID");

                    b.Property<int>("CuentaId")
                        .HasColumnType("integer")
                        .HasColumnName("Cuenta_ID");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("rol");

                    b.HasKey("Id")
                        .HasName("ClienteXCuenta_pkey");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CuentaId");

                    b.ToTable("ClienteXCuenta", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BancoId")
                        .HasColumnType("integer")
                        .HasColumnName("Banco_ID");

                    b.Property<long>("Cbu")
                        .HasColumnType("bigint")
                        .HasColumnName("cbu");

                    b.Property<long>("NumeroCuenta")
                        .HasColumnType("bigint")
                        .HasColumnName("numero_cuenta");

                    b.Property<int>("TipoCuentaId")
                        .HasColumnType("integer")
                        .HasColumnName("TipoCuenta_ID");

                    b.HasKey("Id")
                        .HasName("Cuenta_pkey");

                    b.HasIndex("BancoId");

                    b.HasIndex("TipoCuentaId");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CuitCuil")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cuit_cuil");

                    b.Property<int>("Legajo")
                        .HasColumnType("integer")
                        .HasColumnName("legajo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.Property<int?>("SucursalId")
                        .HasColumnType("integer")
                        .HasColumnName("Sucursal_ID");

                    b.HasKey("Id")
                        .HasName("Empleado_pkey");

                    b.HasIndex("SucursalId");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cp");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("integer")
                        .HasColumnName("Provincia_ID");

                    b.HasKey("Id")
                        .HasName("Localidad_pkey");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Localidad", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("Pais_pkey");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.Property<int>("PaisId")
                        .HasColumnType("integer")
                        .HasColumnName("Pais_ID");

                    b.HasKey("Id")
                        .HasName("Provincia_pkey");

                    b.HasIndex("PaisId");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("calle");

                    b.Property<string>("Cp")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cp");

                    b.Property<int?>("CuentaId")
                        .HasColumnType("integer")
                        .HasColumnName("Cuenta_ID");

                    b.Property<string>("Departamento")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("departamento");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("integer")
                        .HasColumnName("Localidad_ID");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("numero");

                    b.HasKey("Id")
                        .HasName("Sucursal_pkey");

                    b.HasIndex("CuentaId");

                    b.HasIndex("LocalidadId");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.TipoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Alta")
                        .HasColumnType("date")
                        .HasColumnName("alta");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("TipoCuenta_pkey");

                    b.ToTable("TipoCuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.TipoTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("TipoTransaccion_pkey");

                    b.ToTable("TipoTransaccion", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Acreditacion")
                        .HasColumnType("date")
                        .HasColumnName("acreditacion");

                    b.Property<int>("CuentaDestinoId")
                        .HasColumnType("integer")
                        .HasColumnName("CuentaDestino_ID");

                    b.Property<int>("CuentaOrigenId")
                        .HasColumnType("integer")
                        .HasColumnName("CuentaOrigen_ID");

                    b.Property<float>("Monto")
                        .HasColumnType("real")
                        .HasColumnName("monto");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("motivo");

                    b.Property<long>("NumeroOperacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("numero_operacion");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("NumeroOperacion"));

                    b.Property<DateOnly?>("Realizacion")
                        .HasColumnType("date")
                        .HasColumnName("realizacion");

                    b.Property<string>("Referencia")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("referencia");

                    b.Property<int>("TipoTransaccionId")
                        .HasColumnType("integer")
                        .HasColumnName("TipoTransaccion_ID");

                    b.HasKey("Id")
                        .HasName("Transaccion_pkey");

                    b.HasIndex("CuentaDestinoId");

                    b.HasIndex("CuentaOrigenId");

                    b.HasIndex("TipoTransaccionId");

                    b.ToTable("Transaccion", (string)null);
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cliente", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Localidad", "Localidad")
                        .WithMany("Clientes")
                        .HasForeignKey("LocalidadId")
                        .IsRequired()
                        .HasConstraintName("fk_localidad");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.ClienteXCuenta", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Cliente", "Cliente")
                        .WithMany("ClienteXCuenta")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("fk_cliente");

                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Cuenta", "Cuenta")
                        .WithMany("ClienteXCuenta")
                        .HasForeignKey("CuentaId")
                        .IsRequired()
                        .HasConstraintName("fk_cuenta");

                    b.Navigation("Cliente");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cuenta", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Banco", "Banco")
                        .WithMany("Cuenta")
                        .HasForeignKey("BancoId")
                        .IsRequired()
                        .HasConstraintName("fk_banco");

                    b.HasOne("backend_milagrofinanciero.Data.BankModels.TipoCuenta", "TipoCuenta")
                        .WithMany("Cuenta")
                        .HasForeignKey("TipoCuentaId")
                        .IsRequired()
                        .HasConstraintName("fk_tipocuenta");

                    b.Navigation("Banco");

                    b.Navigation("TipoCuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Empleado", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Sucursal", "Sucursal")
                        .WithMany("Empleados")
                        .HasForeignKey("SucursalId")
                        .HasConstraintName("fk_sucursal");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Localidad", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciaId")
                        .IsRequired()
                        .HasConstraintName("fk_provincia");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Provincia", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Pais", "Pais")
                        .WithMany("Provincia")
                        .HasForeignKey("PaisId")
                        .IsRequired()
                        .HasConstraintName("fk_pais");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Sucursal", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Cuenta", "Cuenta")
                        .WithMany("Sucursales")
                        .HasForeignKey("CuentaId")
                        .HasConstraintName("fk_cuenta");

                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Localidad", "Localidad")
                        .WithMany("Sucursales")
                        .HasForeignKey("LocalidadId")
                        .HasConstraintName("fk_localidad");

                    b.Navigation("Cuenta");

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Transaccion", b =>
                {
                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Cuenta", "CuentaDestino")
                        .WithMany("TransaccionCuentaDestinos")
                        .HasForeignKey("CuentaDestinoId")
                        .IsRequired()
                        .HasConstraintName("fk_cuentaDestino");

                    b.HasOne("backend_milagrofinanciero.Data.BankModels.Cuenta", "CuentaOrigen")
                        .WithMany("TransaccionCuentaOrigens")
                        .HasForeignKey("CuentaOrigenId")
                        .IsRequired()
                        .HasConstraintName("fk_cuentaOrigen");

                    b.HasOne("backend_milagrofinanciero.Data.BankModels.TipoTransaccion", "TipoTransaccion")
                        .WithMany("Transacciones")
                        .HasForeignKey("TipoTransaccionId")
                        .IsRequired()
                        .HasConstraintName("fk_tipoTransaccion");

                    b.Navigation("CuentaDestino");

                    b.Navigation("CuentaOrigen");

                    b.Navigation("TipoTransaccion");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Banco", b =>
                {
                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cliente", b =>
                {
                    b.Navigation("ClienteXCuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Cuenta", b =>
                {
                    b.Navigation("ClienteXCuenta");

                    b.Navigation("Sucursales");

                    b.Navigation("TransaccionCuentaDestinos");

                    b.Navigation("TransaccionCuentaOrigens");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Localidad", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Pais", b =>
                {
                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.Sucursal", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.TipoCuenta", b =>
                {
                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("backend_milagrofinanciero.Data.BankModels.TipoTransaccion", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
